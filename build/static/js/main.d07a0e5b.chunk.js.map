{"version":3,"sources":["components/ImageGalleryItem/ImageGalleryItem.module.css","components/Modal/Modal.module.css","App.module.css","components/Container/Container.module.css","components/ImageGallery/ImageGallery.module.css","components/Button/Button.module.css","components/Searchbar/Searchbar.module.css","services/images-api.js","components/Searchbar/Searchbar.js","components/Container/Container.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/SearchError/SearchError.js","components/Modal/Modal.js","components/Button/Button.js","App.js","index.js"],"names":["module","exports","fetchImages","updatedQuery","page","a","fetch","then","response","ok","json","Promise","reject","Error","Searchbar","onSubmit","useState","query","setQuery","queryInputId","shortid","generate","reset","className","s","SearchForm","event","preventDefault","trim","toast","error","type","SearchForm_button","SearchForm_button__label","SearchForm_input","autoComplete","autoFocus","placeholder","name","value","onChange","currentTarget","toLowerCase","id","Container","children","ImageGalleryItem","webformatURL","onImageClick","onClick","src","alt","ImageGalleryItem_image","ImageGallery","images","map","SearchError","message","role","modalRoot","document","querySelector","Modal","handleKeyDown","e","code","props","onClose","handleBackdropClick","target","window","addEventListener","this","removeEventListener","createPortal","Overlay","Component","Button","Status","countPageReducer","state","action","count","payload","prev","App","setError","status","setStatus","setImages","loader","setLoader","showModal","setShowModal","currentModalImage","setCurrentModalImage","useReducer","dispatchPage","useEffect","resData","hits","length","console","log","catch","finally","scroll","toggleModal","scrollTo","top","documentElement","scrollHeight","behavior","modalImageUrl","find","image","largeImageURL","color","height","width","timeout","autoClose","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d07a0e5b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__Hqlx_\",\"ImageGalleryItem_image\":\"ImageGalleryItem_ImageGalleryItem_image__OmU6b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__MUPm2\",\"Modal\":\"Modal_Modal__2-ZtB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__PM-8Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__1sOfa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__3sEA_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__1SoPo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__3GL9v\",\"SearchForm\":\"Searchbar_SearchForm__1oDCk\",\"SearchForm_button\":\"Searchbar_SearchForm_button__22iyH\",\"SearchForm_button__label\":\"Searchbar_SearchForm_button__label__rZBGJ\",\"SearchForm_input\":\"Searchbar_SearchForm_input__1i4vp\"};","const URL = 'https://pixabay.com/api/';\nconst API_KEY = '22041445-5ed2f4f2b816c2335628bcb5d';\n\nexport const fetchImages = async function (updatedQuery, page) {\n  return fetch(\n    `${URL}?q=${updatedQuery}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`,\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n\n    return Promise.reject(\n      new Error('Possibly server error, please try again.'),\n    );\n  });\n};\n","import { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport shortid from 'shortid';\nimport s from 'components/Searchbar/Searchbar.module.css';\n\nfunction Searchbar({onSubmit}) {\n  const [query, setQuery] = useState('');\n\n  const queryInputId = shortid.generate();\n\n  const handleChange = event => {\n    setQuery(event.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (query.trim() === '') {\n      toast.error('Please, enter your query');\n      return;\n    }\n\n    onSubmit(query);\n    reset();\n  };\n\n  const reset = () => {\n    setQuery('');\n  };\n\n\n  return (\n      <header className={s.Searchbar}>\n        <form className={s.SearchForm} onSubmit={handleSubmit}>\n          <button type=\"submit\" className={s.SearchForm_button}>\n            <span className={s.SearchForm_button__label}>Search</span>\n          </button>\n\n          <input\n            className={s.SearchForm_input}\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n            name=\"query\"\n            value={query}\n            onChange={handleChange}\n            id={queryInputId}\n          />\n        </form>\n      </header>\n  )\n} \n\nexport default Searchbar;\n","import PropTypes from 'prop-types';\nimport s from './Container.module.css';\n\nfunction Container({ children }) {\n  return <div className={s.Container}>{children}</div>;\n}\n\nContainer.propTypes = {\n  children: PropTypes.array.isRequired,\n};\n\nexport default Container;\n","import PropTypes from 'prop-types';\nimport s from 'components/ImageGalleryItem/ImageGalleryItem.module.css';\n\nfunction ImageGalleryItem({ id, webformatURL, onImageClick }) {\n  return (\n    <li className={s.ImageGalleryItem} onClick={() => onImageClick(id)}>\n      <img src={webformatURL} alt=\"\" className={s.ImageGalleryItem_image} />\n    </li>\n  );\n}\n\nImageGalleryItem.propTypes = {\n  id: PropTypes.number,\n  webformatURL: PropTypes.string,\n  onImageClick: PropTypes.func,\n};\n\nexport default ImageGalleryItem;\n","import PropTypes from 'prop-types';\nimport s from 'components/ImageGallery/ImageGallery.module.css';\nimport ImageGalleryItem from 'components/ImageGalleryItem/ImageGalleryItem';\n\nfunction ImageGallery({ images, onImageClick }) {\n  return (\n    <ul className={s.ImageGallery}>\n      {images.map(({ id, webformatURL }) => (\n        <ImageGalleryItem\n          onImageClick={onImageClick}\n          key={id}\n          id={id}\n          webformatURL={webformatURL}\n        />\n      ))}\n    </ul>\n  );\n}\n\nImageGallery.propTypes = {\n  images: PropTypes.array,\n  onImageClick: PropTypes.func,\n};\n\nexport default ImageGallery;\n","import PropTypes from 'prop-types';\n\nfunction SearchError({ message }) {\n  return (\n    <div role=\"alert\">\n      <p>{message}</p>\n    </div>\n  );\n}\n\nSearchError.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default SearchError;\n","import { Component } from 'react';\nimport s from 'components/Modal/Modal.module.css';\nimport { createPortal } from 'react-dom';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nclass Modal extends Component {\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  handleKeyDown = e => {\n    if (e.code === 'Escape') {\n      this.props.onClose();\n    }\n  };\n\n  handleBackdropClick = e => {\n    if (e.currentTarget === e.target) {\n      this.props.onClose();\n    }\n  };\n\n  render() {\n    return createPortal(\n      <div className={s.Overlay} onClick={this.handleBackdropClick}>\n        <div className={s.Modal}>{this.props.children}</div>\n      </div>,\n      modalRoot,\n    );\n  }\n}\n\nexport default Modal;\n","import PropTypes from 'prop-types';\nimport s from 'components/Button/Button.module.css';\n\nfunction Button({ onClick }) {\n  return (\n    <button type=\"button\" className={s.Button} onClick={onClick}>\n      Load more\n    </button>\n  );\n}\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default Button;\n","import { useState, useEffect, useReducer } from 'react';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport { toast } from 'react-toastify';\r\nimport s from 'App.module.css';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\nimport Loader from 'react-loader-spinner';\r\nimport { fetchImages } from 'services/images-api';\r\n\r\nimport Searchbar from 'components/Searchbar/Searchbar';\r\nimport Container from 'components/Container/Container';\r\nimport ImageGallery from 'components/ImageGallery/ImageGallery';\r\nimport SearchError from 'components/SearchError/SearchError';\r\nimport Modal from 'components/Modal/Modal';\r\nimport Button from 'components/Button/Button';\r\n\r\nconst Status = {\r\n  IDLE: 'idle',\r\n  RESOLVED: 'resolved',\r\n  REJECTED: 'rejected',\r\n};\r\n\r\nfunction countPageReducer(state, action) {\r\n  switch (action.type) {\r\n    case 'increment':\r\n      return { ...state, count: state.count + action.payload, prev: state.count }\r\n    case 'reload':\r\n      return {count: 1}\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nfunction App() {\r\n  const [query, setQuery] = useState('');\r\n  const [error, setError] = useState(null);\r\n  const [status, setStatus] = useState(Status.IDLE);\r\n  const [images, setImages] = useState([]);\r\n  const [loader, setLoader] = useState(false);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [currentModalImage, setCurrentModalImage] = useState(null);\r\n\r\n  const [page, dispatchPage] = useReducer(countPageReducer, {count: 1, prev: 0});\r\n  \r\n  const handleFormSubmit = query => {\r\n    setQuery(query);\r\n    dispatchPage({type: 'reload'});\r\n    setImages([]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!query) {\r\n      return;\r\n    }\r\n\r\n    setLoader(true);\r\n\r\n    fetchImages(query, page.count)\r\n      .then(resData => resData.hits)\r\n      .then(hits => {\r\n        if (hits.length === 0) {\r\n          toast.error(\r\n            `There are no images on ${query} request, please try another one.`,\r\n          );\r\n          return;\r\n        };\r\n        setImages(hits);\r\n\r\n        console.log(page);\r\n        if (page.count > page.prev) {\r\n          setImages([...images, ...hits ]);\r\n        }\r\n\r\n        setStatus(Status.RESOLVED);\r\n        setLoader(false);\r\n      })\r\n      .catch(error => {\r\n          setError(error);\r\n          setStatus(Status.REJECTED);\r\n      })\r\n      .finally(() => {\r\n        if (images.length > 12) {\r\n          scroll();\r\n        }\r\n      });\r\n\r\n  }, [query, page]);\r\n\r\n\r\n  const toggleModal = () => {\r\n    setShowModal(!showModal);\r\n  };\r\n\r\n  const onImageClick = id => {\r\n    const modalImage = images.find(image => image.id === id);\r\n    const modalImageUrl = modalImage.largeImageURL;\r\n\r\n    setCurrentModalImage(modalImageUrl);\r\n    toggleModal();\r\n  };\r\n\r\n  const loadMoreImages = () => {\r\n    dispatchPage({ type: 'increment', payload: 1 });\r\n    setLoader(true);\r\n  };\r\n\r\n  const scroll = () => {\r\n    window.scrollTo({\r\n      top: document.documentElement.scrollHeight,\r\n      behavior: 'smooth',\r\n    });\r\n  };\r\n\r\n  return (\r\n      <div className={s.App}>\r\n        <Searchbar onSubmit={handleFormSubmit} />\r\n        <Container>\r\n          {status === Status.IDLE && <div>Enter your request</div>}\r\n\r\n          {status === Status.REJECTED && <SearchError message={error.message} />}\r\n\r\n          {status === Status.RESOLVED && (\r\n            <ImageGallery images={images} onImageClick={onImageClick} />\r\n          )}\r\n\r\n          {loader && (\r\n            <Loader\r\n              type=\"TailSpin\"\r\n              color=\"#00BFFF\"\r\n              height={80}\r\n              width={80}\r\n              timeout={3000}\r\n            />\r\n          )}\r\n\r\n          {images.length !== 0 && <Button onClick={loadMoreImages} />}\r\n\r\n          {showModal && (\r\n            <Modal onClose={toggleModal}>\r\n              <img src={currentModalImage} alt=\"\" />\r\n            </Modal>\r\n          )}\r\n\r\n          <ToastContainer autoClose={5000} />\r\n        </Container>\r\n      </div>\r\n    );\r\n}\r\n\r\n\r\n\r\n// class App extends Component {\r\n//   state = {\r\n//     query: '',\r\n//     images: [],\r\n//     page: 1,\r\n//     status: 'idle',\r\n//     loader: false,\r\n//     error: null,\r\n//     showModal: false,\r\n//     currentModalImage: null,\r\n//   };\r\n\r\n  // handleFormSubmit = query => {\r\n  //   this.setState({ query, page: 1, images: [] });\r\n  // };\r\n\r\n  // componentDidUpdate(prevProps, prevState) {\r\n  //   const { query, page } = this.state;\r\n\r\n  //   if (prevState.query !== query || prevState.page !== page) {\r\n  //     this.setState({ loader: true });\r\n\r\n  //     fetchImages(query, page)\r\n  //       .then(resData => resData.hits)\r\n  //       .then(hits => {\r\n  //         if (hits.length === 0) {\r\n  //           toast.error(\r\n  //             `There are no images on ${query} request, please try another one.`,\r\n  //           );\r\n  //           return;\r\n  //         }\r\n\r\n  //         this.setState({\r\n  //           status: 'resolved',\r\n  //           loader: false,\r\n  //         });\r\n\r\n  //         if (prevState.page < page) {\r\n  //           this.setState({ images: [...prevState.images, ...hits] });\r\n  //         } else {\r\n  //           this.setState({ images: hits });\r\n  //         }\r\n  //       })\r\n  //       .catch(error => this.setState({ error, status: 'rejected' }))\r\n  //       .finally(() => {\r\n  //         if (this.state.images.length > 12) {\r\n  //           this.scroll();\r\n  //         }\r\n  //       });\r\n  //   }\r\n  // }\r\n\r\n  // toggleModal = () => {\r\n  //   this.setState(({ showModal }) => ({\r\n  //     showModal: !showModal,\r\n  //   }));\r\n  // };\r\n\r\n  // onImageClick = id => {\r\n  //   const modalImage = this.state.images.find(image => image.id === id);\r\n  //   const modalImageUrl = modalImage.largeImageURL;\r\n  //   this.setState({\r\n  //     currentModalImage: modalImageUrl,\r\n  //   });\r\n  //   this.toggleModal();\r\n  // };\r\n\r\n  // loadMoreImages = () => {\r\n  //   this.setState(prevState => ({\r\n  //     page: prevState.page + 1,\r\n  //     loader: true,\r\n  //   }));\r\n  // };\r\n\r\n  // scroll = () => {\r\n  //   window.scrollTo({\r\n  //     top: document.documentElement.scrollHeight,\r\n  //     behavior: 'smooth',\r\n  //   });\r\n  // };\r\n\r\n//   render() {\r\n//     const { images, showModal, error, status, currentModalImage, loader } =\r\n//       this.state;\r\n\r\n//     return (\r\n//       <div className={s.App}>\r\n//         <Searchbar onSubmit={this.handleFormSubmit} />\r\n//         <Container>\r\n//           {status === 'idle' && <div>Enter your request</div>}\r\n\r\n//           {status === 'rejected' && <SearchError message={error.message} />}\r\n\r\n//           {status === 'resolved' && (\r\n//             <ImageGallery images={images} onImageClick={this.onImageClick} />\r\n//           )}\r\n\r\n//           {loader && (\r\n//             <Loader\r\n//               type=\"TailSpin\"\r\n//               color=\"#00BFFF\"\r\n//               height={80}\r\n//               width={80}\r\n//               timeout={3000}\r\n//             />\r\n//           )}\r\n\r\n//           {images.length !== 0 && <Button onClick={this.loadMoreImages} />}\r\n\r\n//           {showModal && (\r\n//             <Modal onClose={this.toggleModal}>\r\n//               <img src={currentModalImage} alt=\"\" />\r\n//             </Modal>\r\n//           )}\r\n\r\n//           <ToastContainer autoClose={5000} />\r\n//         </Container>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}